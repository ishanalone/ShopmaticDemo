{"ast":null,"code":"var _jsxFileName = \"/home/ishan/Documents/React Native/ShopmaticDemo/Shopmatic/Screens/AlbumListScreen.js\";\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as AlbumActions from \"../Store/Actions/Album\";\nimport AlbumCell from \"../Components/AlbumCell\";\n\nvar AlbumListScreen = function AlbumListScreen(props) {\n  var albums = useSelector(function (state) {\n    return state.albums.albums;\n  });\n  var categorizedAlbum = useSelector(function (state) {\n    return state.albums.categorisedAlbum;\n  });\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(AlbumActions.fetchAlbums());\n  }, [dispatch]);\n  var categories = Object.keys(categorizedAlbum);\n  return React.createElement(FlatList, {\n    data: categories,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    renderItem: function renderItem(itemData) {\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }\n      }, \" \", itemData.item, \" \"), React.createElement(FlatList, {\n        data: categorizedAlbum[itemData.item],\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(albumData) {\n          return React.createElement(AlbumCell, {\n            image: albumData.item.imageUrl,\n            title: albumData.item.title,\n            price: albumData.item.price,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 41\n            }\n          });\n        },\n        horizontal: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  });\n};\n\nAlbumListScreen.navigationOptions = {\n  headerTitle: \"Top 100\"\n};\nvar styles = StyleSheet.create({\n  category: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default AlbumListScreen;","map":{"version":3,"sources":["/home/ishan/Documents/React Native/ShopmaticDemo/Shopmatic/Screens/AlbumListScreen.js"],"names":["React","useEffect","useSelector","useDispatch","AlbumActions","AlbumCell","AlbumListScreen","props","albums","state","categorizedAlbum","categorisedAlbum","dispatch","fetchAlbums","categories","Object","keys","item","index","toString","itemData","styles","category","albumData","imageUrl","title","price","navigationOptions","headerTitle","StyleSheet","create","fontSize","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,YAAZ;AACA,OAAOC,SAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,MAAMC,MAAM,GAAGN,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACD,MAAN,CAAaA,MAAjB;AAAA,GAAN,CAA1B;AACA,MAAME,gBAAgB,GAAGR,WAAW,CAAC,UAAAO,KAAK;AAAA,WAAIA,KAAK,CAACD,MAAN,CAAaG,gBAAjB;AAAA,GAAN,CAApC;AACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACAF,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,QAAQ,CAACR,YAAY,CAACS,WAAb,EAAD,CAAR;AACH,GAFQ,EAEN,CAACD,QAAD,CAFM,CAAT;AAGA,MAAME,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYN,gBAAZ,CAAnB;AACA,SAAO,oBAAC,QAAD;AACK,IAAA,IAAI,EAAEI,UADX;AAEK,IAAA,YAAY,EAAE,sBAACG,IAAD,EAAOC,KAAP;AAAA,aAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,KAFnB;AAGK,IAAA,UAAU,EAAE,oBAACC,QAAD,EAAc;AACtB,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAgCF,QAAQ,CAACH,IAAzC,MADJ,EAEI,oBAAC,QAAD;AACI,QAAA,IAAI,EAAEP,gBAAgB,CAACU,QAAQ,CAACH,IAAV,CAD1B;AAEI,QAAA,YAAY,EAAI,sBAACA,IAAD,EAAOC,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SAFpB;AAGI,QAAA,UAAU,EAAE,oBAACI,SAAD,EAAe;AACvB,iBACI,oBAAC,SAAD;AAAW,YAAA,KAAK,EAAEA,SAAS,CAACN,IAAV,CAAeO,QAAjC;AAA2C,YAAA,KAAK,EAAED,SAAS,CAACN,IAAV,CAAeQ,KAAjE;AAAwE,YAAA,KAAK,EAAEF,SAAS,CAACN,IAAV,CAAeS,KAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,SAPL;AAQI,QAAA,UAAU,EAAE,IARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAeH,KAnBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAsBH,CA9BD;;AAiCApB,eAAe,CAACqB,iBAAhB,GAAoC;AAChCC,EAAAA,WAAW,EAAG;AADkB,CAApC;AAIA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,QAAQ,EAAG;AACPS,IAAAA,QAAQ,EAAG,EADJ;AAEPC,IAAAA,UAAU,EAAG;AAFN;AADkB,CAAlB,CAAf;AAOA,eAAe1B,eAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport { StyleSheet, Text, View, FlatList } from 'react-native';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as AlbumActions from '../Store/Actions/Album';\nimport AlbumCell from '../Components/AlbumCell'\n\nconst AlbumListScreen = props => {\n    const albums = useSelector(state => state.albums.albums);\n    const categorizedAlbum = useSelector(state => state.albums.categorisedAlbum);\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(AlbumActions.fetchAlbums());\n    }, [dispatch]);\n    const categories = Object.keys(categorizedAlbum);\n    return <FlatList \n                data={categories} \n                keyExtractor={(item, index) => index.toString()} \n                renderItem={(itemData) => {\n                    return (\n                        <View>\n                            <Text style={styles.category}> {itemData.item} </Text>\n                            <FlatList\n                                data={categorizedAlbum[itemData.item]}\n                                keyExtractor = {(item, index) => index.toString()}\n                                renderItem={(albumData) => {\n                                    return(\n                                        <AlbumCell image={albumData.item.imageUrl} title={albumData.item.title} price={albumData.item.price}/>\n                                    );\n                                }}\n                                horizontal={true}\n                            />\n                        </View>\n                      );\n                }}\n            />\n\n}\n\n\nAlbumListScreen.navigationOptions = {\n    headerTitle : \"Top 100\"\n}\n\nconst styles = StyleSheet.create({\n    category : {\n        fontSize : 18,\n        fontWeight : 'bold'\n    }\n});\n\nexport default AlbumListScreen"]},"metadata":{},"sourceType":"module"}