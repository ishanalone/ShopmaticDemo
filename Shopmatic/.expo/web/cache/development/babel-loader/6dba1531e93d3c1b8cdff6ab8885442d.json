{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Category from \"../../Models/Category\";\nimport Album from \"../../Models/Album\";\nexport var SET_ALBUMS = 'SET_ALBUMS';\nexport var fetchAlbums = function fetchAlbums() {\n  return function _callee(dispatch) {\n    var response, resData, loadedAlbums, feed, albumArray, key, item, titleDict, title, idSuperDict, idDict, id, artistDict, artist, imageArray, imageDict, imageUrl, priceDict, price, releaseDict, releaseDate, categoryDict, catAttributeDict, category, album;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://itunes.apple.com/us/rss/topalbums/limit=100/json'));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            resData = _context.sent;\n            loadedAlbums = [];\n            feed = resData['feed'];\n            albumArray = feed['entry'];\n\n            for (key in albumArray) {\n              item = albumArray[key];\n              console.log(item);\n              titleDict = item['im:name'];\n              title = titleDict['label'];\n              idSuperDict = item['id'];\n              idDict = idSuperDict['attributes'];\n              id = idDict['im:id'];\n              artistDict = item['im:artist'];\n              artist = artistDict['label'];\n              imageArray = item['im:image'];\n              imageDict = imageArray[2];\n              imageUrl = imageDict['label'];\n              priceDict = item['im:price'];\n              price = priceDict['label'];\n              releaseDict = item['im:releaseDate'];\n              releaseDate = releaseDict['label'];\n              categoryDict = item['category'];\n              catAttributeDict = categoryDict['attributes'];\n              category = new Category(catAttributeDict['im:id'], catAttributeDict['label']);\n              album = new Album(id, title, imageUrl, artist, price, category, releaseDate);\n              loadedAlbums.push(album);\n            }\n\n            dispatch({\n              type: SET_ALBUMS,\n              albums: loadedAlbums\n            });\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};","map":{"version":3,"sources":["/home/ishan/Documents/React Native/ShopmaticDemo/Shopmatic/Store/Actions/Album.js"],"names":["Category","Album","SET_ALBUMS","fetchAlbums","dispatch","fetch","response","json","resData","loadedAlbums","feed","albumArray","key","item","console","log","titleDict","title","idSuperDict","idDict","id","artistDict","artist","imageArray","imageDict","imageUrl","priceDict","price","releaseDict","releaseDate","categoryDict","catAttributeDict","category","album","push","type","albums"],"mappings":";AAAA,OAAOA,QAAP;AACA,OAAOC,KAAP;AAEA,OAAO,IAAMC,UAAU,GAAG,YAAnB;AAGP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,SAAO,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACoBC,KAAK,CACxB,0DADwB,CADzB;;AAAA;AACGC,YAAAA,QADH;AAAA;AAAA,6CAImBA,QAAQ,CAACC,IAAT,EAJnB;;AAAA;AAIGC,YAAAA,OAJH;AAMGC,YAAAA,YANH,GAMkB,EANlB;AAOGC,YAAAA,IAPH,GAOUF,OAAO,CAAC,MAAD,CAPjB;AAQGG,YAAAA,UARH,GAQgBD,IAAI,CAAC,OAAD,CARpB;;AASH,iBAAWE,GAAX,IAAkBD,UAAlB,EAA6B;AACnBE,cAAAA,IADmB,GACZF,UAAU,CAACC,GAAD,CADE;AAEzBE,cAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACMG,cAAAA,SAHmB,GAGPH,IAAI,CAAC,SAAD,CAHG;AAInBI,cAAAA,KAJmB,GAIXD,SAAS,CAAC,OAAD,CAJE;AAKnBE,cAAAA,WALmB,GAKLL,IAAI,CAAC,IAAD,CALC;AAMnBM,cAAAA,MANmB,GAMVD,WAAW,CAAC,YAAD,CAND;AAOnBE,cAAAA,EAPmB,GAOdD,MAAM,CAAC,OAAD,CAPQ;AAQnBE,cAAAA,UARmB,GAQNR,IAAI,CAAC,WAAD,CARE;AASnBS,cAAAA,MATmB,GASVD,UAAU,CAAC,OAAD,CATA;AAUnBE,cAAAA,UAVmB,GAUNV,IAAI,CAAC,UAAD,CAVE;AAWnBW,cAAAA,SAXmB,GAWPD,UAAU,CAAC,CAAD,CAXH;AAYnBE,cAAAA,QAZmB,GAYRD,SAAS,CAAC,OAAD,CAZD;AAanBE,cAAAA,SAbmB,GAaPb,IAAI,CAAC,UAAD,CAbG;AAcnBc,cAAAA,KAdmB,GAcXD,SAAS,CAAC,OAAD,CAdE;AAenBE,cAAAA,WAfmB,GAeLf,IAAI,CAAC,gBAAD,CAfC;AAgBnBgB,cAAAA,WAhBmB,GAgBLD,WAAW,CAAC,OAAD,CAhBN;AAiBnBE,cAAAA,YAjBmB,GAiBJjB,IAAI,CAAC,UAAD,CAjBA;AAkBnBkB,cAAAA,gBAlBmB,GAkBAD,YAAY,CAAC,YAAD,CAlBZ;AAmBnBE,cAAAA,QAnBmB,GAmBR,IAAIhC,QAAJ,CAAa+B,gBAAgB,CAAC,OAAD,CAA7B,EAAwCA,gBAAgB,CAAC,OAAD,CAAxD,CAnBQ;AAoBnBE,cAAAA,KApBmB,GAoBX,IAAIhC,KAAJ,CAAUmB,EAAV,EAAcH,KAAd,EAAqBQ,QAArB,EAA+BH,MAA/B,EAAuCK,KAAvC,EAA8CK,QAA9C,EAAwDH,WAAxD,CApBW;AAqBzBpB,cAAAA,YAAY,CAACyB,IAAb,CAAkBD,KAAlB;AACH;;AAED7B,YAAAA,QAAQ,CAAC;AAAC+B,cAAAA,IAAI,EAACjC,UAAN;AAAkBkC,cAAAA,MAAM,EAAG3B;AAA3B,aAAD,CAAR;;AAjCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAP;AAoCH,CArCM","sourcesContent":["import Category from '../../Models/Category'\nimport Album from '../../Models/Album'\n\nexport const SET_ALBUMS = 'SET_ALBUMS';\n\n\nexport const fetchAlbums = () => {\n    return async dispatch => {\n        const response = await fetch(\n            'https://itunes.apple.com/us/rss/topalbums/limit=100/json'\n        );\n        const resData = await response.json();\n        \n        const loadedAlbums = [];\n        const feed = resData['feed'];\n        const albumArray = feed['entry'];\n        for (const key in albumArray){\n            const item = albumArray[key]\n            console.log(item)\n            const titleDict = item['im:name'];\n            const title = titleDict['label'];\n            const idSuperDict = item['id'];\n            const idDict = idSuperDict['attributes'];\n            const id = idDict['im:id'];\n            const artistDict = item['im:artist'];\n            const artist = artistDict['label'];\n            const imageArray = item['im:image'];\n            const imageDict = imageArray[2];\n            const imageUrl = imageDict['label'];\n            const priceDict = item['im:price'];\n            const price = priceDict['label'];\n            const releaseDict = item['im:releaseDate'];\n            const releaseDate = releaseDict['label'];\n            const categoryDict = item['category'];\n            const catAttributeDict = categoryDict['attributes'];\n            const category = new Category(catAttributeDict['im:id'], catAttributeDict['label']);\n            const album = new Album(id, title, imageUrl, artist, price, category, releaseDate);\n            loadedAlbums.push(album)\n        }\n        \n        dispatch({type:SET_ALBUMS, albums : loadedAlbums})\n\n    };\n}"]},"metadata":{},"sourceType":"module"}