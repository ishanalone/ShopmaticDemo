{"ast":null,"code":"import { SET_ALBUMS } from \"../Actions/Album\";\nvar initialState = {\n  albums: [],\n  categorisedAlbum: [],\n  favouriteAlbums: []\n};\n\nvar AlbumReducer = function AlbumReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_ALBUMS:\n      var albumList = action.albums;\n      var categoryDict = albumList.reduce(function (dict, album) {\n        var key = album.category.name;\n\n        if (!dict[key]) {\n          dict[key] = [];\n        }\n\n        dict[key].push(album);\n        return dict;\n      }, {});\n      return {\n        albums: albumList,\n        categorisedAlbum: categoryDict\n      };\n  }\n\n  return state;\n};\n\nexport default AlbumReducer;","map":{"version":3,"sources":["/home/ishan/Documents/React Native/ShopmaticDemo/Shopmatic/Store/Reducers/Album.js"],"names":["SET_ALBUMS","initialState","albums","categorisedAlbum","favouriteAlbums","AlbumReducer","state","action","type","albumList","categoryDict","reduce","dict","album","key","category","name","push"],"mappings":"AAAA,SAASA,UAAT;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAG,EADQ;AAEjBC,EAAAA,gBAAgB,EAAG,EAFF;AAGjBC,EAAAA,eAAe,EAAG;AAHD,CAArB;;AAMA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,UAAL;AACI,UAAMS,SAAS,GAAGF,MAAM,CAACL,MAAzB;AACA,UAAMQ,YAAY,GAAGD,SAAS,CAACE,MAAV,CAAiB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACnD,YAAMC,GAAG,GAAGD,KAAK,CAACE,QAAN,CAAeC,IAA3B;;AACA,YAAI,CAACJ,IAAI,CAACE,GAAD,CAAT,EAAgB;AACZF,UAAAA,IAAI,CAACE,GAAD,CAAJ,GAAY,EAAZ;AACF;;AAEDF,QAAAA,IAAI,CAACE,GAAD,CAAJ,CAAUG,IAAV,CAAeJ,KAAf;AACA,eAAOD,IAAP;AACJ,OARoB,EAQnB,EARmB,CAArB;AASA,aAAO;AACHV,QAAAA,MAAM,EAAGO,SADN;AAEHN,QAAAA,gBAAgB,EAAGO;AAFhB,OAAP;AAZR;;AAkBA,SAAOJ,KAAP;AACH,CApBD;;AAsBA,eAAeD,YAAf","sourcesContent":["import { SET_ALBUMS} from '../Actions/Album'\n\nconst initialState = {\n    albums : [],\n    categorisedAlbum : [],\n    favouriteAlbums : []\n};\n\nconst AlbumReducer = (state = initialState, action) => { \n    switch (action.type){\n        case SET_ALBUMS :\n            const albumList = action.albums;\n            const categoryDict = albumList.reduce((dict, album) => {\n                const key = album.category.name\n                if (!dict[key]) {\n                    dict[key] = [];\n                 }\n                 // Add object to list for given key's value\n                 dict[key].push(album);\n                 return dict;\n            },{})\n            return {\n                albums : albumList,\n                categorisedAlbum : categoryDict\n            }\n\n    }\n    return state\n}\n\nexport default AlbumReducer"]},"metadata":{},"sourceType":"module"}